/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package net.tiaozhanbei.action.manage.project;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.tiaozhanbei.model.*;
import net.tiaozhanbei.action.BaseAction;
import net.tiaozhanbei.form.ProjectForm;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
/** 
 * MyEclipse Struts
 * Creation date: 03-01-2009
 * 
 * XDoclet definition:
 * @struts.action path="/modify" name="projectForm" input="/Web/Manage/ProjestManage/modify.jsp" scope="request" validate="true"
 */
public class ModifyAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/** 去除最喜爱项目
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward delFromMe(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		int id = Integer.parseInt(request.getParameter("id"));
		User user = (User) request.getSession().getAttribute("user");
	

		try{
			getUserService().removeFavourate(user,id);
			request.setAttribute("message", "success");
		}catch (Exception e) {
			System.out.println(e);
			request.setAttribute("message", "failed");
		}
		return mapping.findForward("ajaxSuccessOrFailure");
	}
	
	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ProjectForm projectForm = (ProjectForm) form;
		int id = Integer.parseInt(request.getParameter("id"));
		Project project =getProjectService().getProject(id);
		
		try{
			String tempString = projectForm.getBrief();
			if(!"".equals(tempString) && tempString!=null)
				project.setBrief(tempString);
			tempString = projectForm.getDetal();
			if(!"".equals(tempString) && tempString!=null)
				project.setDetal(tempString);
			tempString = projectForm.getName();
			if(!"".equals(tempString) && tempString!=null)
				project.setName(tempString);
			tempString = projectForm.getType();
			if(!"".equals(tempString) && tempString!=null)
				project.setType(tempString);
		getProjectService().updateProject(project);
		request.setAttribute("message","success");
		}catch (Exception e) {
			request.setAttribute("message","failure");
		}
		return mapping.findForward("ajaxSuccessOrFailure");
	}
	
	public ActionForward setShowFile(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		int id = Integer.parseInt(request.getParameter("id"));
		int fileid = Integer.parseInt(request.getParameter("fileId"));
		try{
			
		getProjectService().setShowFile(id,fileid);
		request.setAttribute("message","success");
		}catch (Exception e) {
			request.setAttribute("message","failure");
		}
		return mapping.findForward("ajaxSuccessOrFailure");
	}
	
	public ActionForward setProcess(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		int id = Integer.parseInt(request.getParameter("id"));
		int process = Integer.parseInt(request.getParameter("process"));
		try{
			
		Project project =getProjectService().getProject(id);
		project.getState().setProcess(process);
		getProjectService().updateProject(project);
		request.setAttribute("message","success");
		}catch (Exception e) {
			request.setAttribute("message","failure");
		}
		return mapping.findForward("ajaxSuccessOrFailure");
	}
}