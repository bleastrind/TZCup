/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package net.tiaozhanbei.action.project;

import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.springframework.beans.BeanUtils;

import net.tiaozhanbei.action.*;
import net.tiaozhanbei.form.ProjectCommentForm;
import net.tiaozhanbei.model.ProjectComment;
import net.tiaozhanbei.model.ProjectScore;
import net.tiaozhanbei.model.User;

/** 
 * MyEclipse Struts
 * Creation date: 03-20-2009
 * 
 * XDoclet definition:
 * @struts.action
 */
public class JudgeAction extends BaseAction {
	private static Logger logger = Logger.getLogger(JudgeAction.class);
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			int projectCommentId=0;
			try{
				projectCommentId= Integer.parseInt(request.getParameter("commentId"));
			}catch (Exception e) {
			}
			int projectId = Integer.parseInt((request.getParameter("projectId")));
			
			User judger =  (User)request.getSession().getAttribute("user");
	
			//评分
			int score = Integer.parseInt(request.getParameter("score"));
			ProjectScore projectScore=new ProjectScore();
			
			try{
				getProjectService().getMyScore(judger, projectId);
			}catch (Exception e) {
				logger.info(e);
			}
	
			projectScore.setScore(score);
			projectScore.setJudger(judger);
			setProjectScore(projectScore);//设置权重
			
	
			//点评
			ProjectComment comment  =  new ProjectComment();
			try {
				comment =getProjectService().getComment(projectCommentId);
			} catch (Exception e) {
				logger.info(e.getMessage());
			}
			ProjectCommentForm commentForm = (ProjectCommentForm)form;
			BeanUtils.copyProperties(commentForm, comment);
			comment.setProjectId(projectId);
			comment.setTime(new Date());
			
			getProjectService().professorJudge(projectScore,comment);
			
			request.setAttribute("message", "success");
		}catch (Exception e) {
			request.setAttribute("message", "failed");
		}

		return mapping.findForward("ajaxSuccessOrFailure");
	}
	
	private void setProjectScore(ProjectScore score){
		
	}
}