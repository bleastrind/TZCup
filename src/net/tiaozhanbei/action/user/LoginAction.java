/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package net.tiaozhanbei.action.user;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import net.tiaozhanbei.form.LoginForm;
import net.tiaozhanbei.model.User;
import net.tiaozhanbei.util.Sha512DigestUtils;

import org.apache.commons.beanutils.BeanUtils;
import net.tiaozhanbei.action.BaseAction;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
/** 
 * 登录，可能来自主页/Web/Index/_LoginBox.jsp和专门的登录页面，最终返回到需登录前的页面
 * MyEclipse Struts
 * Creation date: 02-26-2009
 * 
 * XDoclet definition:
 * @struts.action path="/login" name="loginForm" scope="request"
 * @struts.action-forward name="index" path="/Web/Index/index.jsp"
 */
public class LoginAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		LoginForm loginForm = (LoginForm) form;// TODO Auto-generated method stub
		User user=new User();
		HttpSession session=request.getSession();
		String sRand=(String)session.getAttribute("code");//获取生成的验证码
		String autoLog=request.getParameter("autoLog");//获取时候选择了自动登陆
		System.out.println("登陆页面来的表单信息"+loginForm.getName()+loginForm.getPassword());
		User user2=new User();
		String validateimage=request.getParameter("validateimage");//获取用户输入的验证码
		if(sRand!=null){//如果有验证码
		if( !sRand.equals(validateimage))//如果用户输入的验证码不空
			return mapping.findForward("loginpage");
		try {
			BeanUtils.copyProperties(user, form);
			String password=loginForm.getPassword();
			user.setPassword(Sha512DigestUtils.shaHex(password));
			user2=getUserService().login(user);
			if (user2.getName()!=null) {
				session.setAttribute("user", user2);
				if ("true".equals(autoLog)) {//如果用户选择自动登陆
					Cookie usernamecookie=new Cookie("username",user.getName());//创建用户名的cookie
					Cookie passwordcookie=new Cookie("password",user.getPassword());//创建存放密码的cookie，密码是已加密的
					usernamecookie.setMaxAge(360*60*24*60);
					passwordcookie.setMaxAge(360*60*24*60);
					response.addCookie(usernamecookie);
					response.addCookie(passwordcookie);
					System.out.println("创建cookie成功！");
				}
				request.setAttribute("oldurl", request.getParameter("oldurl"));
				System.out.println("来自页面"+request.getParameter("oldurl"));
				return mapping.findForward("redirect");
			}
			
		} catch (Exception e) {
			// TODO: handle exception
		}
		}
		System.out.println("测试是否执行了else语句");
		
		return mapping.findForward("loginpage");
	}
}